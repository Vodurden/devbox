#!/usr/bin/env bash
set -euo pipefail

SOURCE_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

print_valid_fork_names() {
    echo "Valid fork names are:"
    echo
    echo "- nixpkgs"
    echo "- nixpkgs-unstable"
    echo "- nixpkgs-darwin"
}

if [[ "${1:-}" == "" ]]; then
    echo "No arguments provided. Usage: sync-nixpkgs fork-name"
    echo
    print_valid_fork_names
    echo
    exit 1
fi;

FORK_NAME=$1

if [ "${FORK_NAME}" == 'nixpkgs' ]; then
    # Last updated: 2019-09-21
    export FORK_REMOTE="channels"
    export FORK_BRANCH="nixos-19.03"
    export FORK_REF="021d733ea3f87b8c9232020b4e606d08eaca160b"
elif [ "${FORK_NAME}" == 'nixpkgs-unstable' ]; then
    # Last updated: 2019-09-21
    export FORK_REMOTE="channels"
    export FORK_BRANCH="nixpkgs-unstable"
    export FORK_REF="c4196cca9acd1c51f62baf10fcbe34373e330bb3"
elif [ "${FORK_NAME}" == 'nixpkgs-darwin' ]; then
    # Last updated: 2019-03-02
    export FORK_REMOTE="channels"
    export FORK_BRANCH="nixpkgs-19.03-darwin"
    export FORK_REF="e67da9e4cabadb05c3c39de7a8e3aec384784052"
else
    echo "Unknown fork name provided: ${FORK_NAME}"
    print_valid_fork_names
    echo
    exit 1
fi;

FORK_CACHE_DIR="/nix/do-not-touch-base-nixpkgs-cache"
FORK_TARGET_DIR="/nix/${FORK_NAME}"
FORK_REMOTE_BRANCH="${FORK_REMOTE}/${FORK_BRANCH}"

${SOURCE_DIR}/sync-git-repo \
  --repo https://github.com/Vodurden/nixpkgs.git \
  --branch "${FORK_BRANCH}" \
  --remote-branch "${FORK_REMOTE_BRANCH}" \
  --ref "${FORK_REF}" \
  --remote channels git://github.com/NixOS/nixpkgs-channels.git \
  --remote upstream git://github.com/NixOS/nixpkgs.git \
  --cache-dir "${FORK_CACHE_DIR}" \
  --target-dir "${FORK_TARGET_DIR}"
